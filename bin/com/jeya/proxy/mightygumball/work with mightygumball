E:\For MyTest\DesignPatternsHeadFirstTest\bin\com\jeya\proxy\mightygumball\remote>rmic MyRemoteImpl

error: Invalid class file format in .\MyRemoteImpl.class.  The major.minor version '52.0' is too recent for this tool to understand.
error: Class MyRemoteImpl not found.

fix for 1st: in cmd

path = %JAVA8%/bin

(don't let to confuse with version)

fix for 2nd:

and now run:
"E:\For MyTest\DesignPatternsHeadFirstTest\bin>rmic com.jeya.proxy.mightygumball.remote.MyRemoteImpl" : will generate stub

in one cmd "E:\For MyTest\DesignPatternsHeadFirstTest\bin>rmiregistry" : make upcoming service available

in another cmd "E:\For MyTest\DesignPatternsHeadFirstTest\bin>java com.jeya.proxy.mightygumball.remote.MainServer" : will up service

in another cmd "E:\For MyTest\DesignPatternsHeadFirstTest\bin>java com.jeya.proxy.mightygumball.client.MyRemoteClient" : will invoke the method in service

-----------------------------------------------------------------------------------------------------------------------

"E:\For MyTest\DesignPatternsHeadFirstTest\bin>rmiregistry"

"E:\For MyTest\DesignPatternsHeadFirstTest\bin>java com.jeya.proxy.mightygumball.remote.GumballMachineServer"

"E:\For MyTest\DesignPatternsHeadFirstTest\bin>java com.jeya.proxy.mightygumball.client.GumballMonitorMain"

-------------------------------------------------------------------------------------------------------------------------

rmiregistry should be run before service is up

client actually calls stub's methods

remote proxy: control access to a remote object : mighty gumball
virtual proxy: control access to a resource that is expensive to create
protection proxy: control access to a resource based on access rights

actual proxy class is created at runtime : dynamic proxy: in java.lang.reflect

-------------------------------------------------------------------------------------------------------------------------

firewall proxy : controls access to a set of network resources, protecting the subject from "bad" clients
smart reference proxy : provides additional actions whenever a subject is referenced Eg: counting number of references to an object
caching proxy: provides temporary storage for results of operations that are expensive : allow multiple clients to share the results to reduce computation or
		network latency Eg: web server proxies, content management and publishing systems
Synchronization proxy : safe access to a subject from multiple threads Eg: controls access to an underlying set of objects in a distributed environment
Complexity hiding proxy : hides the complexity of and control access to a complex set of classes
Copy-on-Write proxy : controls the copying of an object by deferring the copying of an object until it is required by a client : variant of virtual proxy
		Eg: copyOnWriteArrayList()
